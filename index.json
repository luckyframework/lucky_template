{"repository_name":"lucky_template","body":"# lucky_template\n\nTODO: Write a description here\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     lucky_template:\n       github: mdwagner/lucky_template\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"lucky_template\"\n```\n\nTODO: Write usage instructions here\n\n## Development\n\nTODO: Write development instructions here\n\n## Contributing\n\n1. Fork it (<https://github.com/mdwagner/lucky_template/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Michael Wagner](https://github.com/mdwagner) - creator and maintainer\n","program":{"html_id":"lucky_template/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"lucky_template","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"lucky_template/LuckyTemplate","path":"LuckyTemplate.html","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate","abstract":false,"locations":[{"filename":"src/lucky_template.cr","line_number":4,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L4"},{"filename":"src/lucky_template/error.cr","line_number":1,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/error.cr#L1"},{"filename":"src/lucky_template/file.cr","line_number":1,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file.cr#L1"},{"filename":"src/lucky_template/file_system.cr","line_number":1,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file_system.cr#L1"},{"filename":"src/lucky_template/folder.cr","line_number":1,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L1"},{"filename":"src/lucky_template/version.cr","line_number":1,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/version.cr#L1"},{"filename":"src/spec.cr","line_number":1,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/spec.cr#L1"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /home/runner/work/lucky_template/lucky_template/src/lucky_template`).chomp.stringify }}"}],"extended_modules":[{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"}],"instance_methods":[{"html_id":"create_folder(&:Folder->):Folder-instance-method","name":"create_folder","doc":"Creates a `Folder` and yields it, before returning the **unlocked** `Folder`\n\nNOTE: `Folder` is **locked** when being yielded. See `Folder#locked?`.\n\nExample:\n```\nfolder = LuckyTemplate.create_folder do |dir|\n  dir.locked? # => true\n  dir.add_file(\".keep\")\nend\nfolder.locked? # => false\n```","summary":"<p>Creates a <code><a href=\"LuckyTemplate/Folder.html\">Folder</a></code> and yields it, before returning the <strong>unlocked</strong> <code><a href=\"LuckyTemplate/Folder.html\">Folder</a></code></p>","abstract":false,"location":{"filename":"src/lucky_template.cr","line_number":26,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L26"},"def":{"name":"create_folder","yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Folder ->)"},"return_type":"Folder","visibility":"Public","body":"Folder.new.tap do |folder|\n  folder.lock do\n    yield folder\n  end\nend"}},{"html_id":"create_folder:Folder-instance-method","name":"create_folder","doc":"Creates an empty `Folder`\n\nExample:\n```\nfolder = LuckyTemplate.create_folder\nfolder.locked? # => false\n```","summary":"<p>Creates an empty <code><a href=\"LuckyTemplate/Folder.html\">Folder</a></code></p>","abstract":false,"location":{"filename":"src/lucky_template.cr","line_number":41,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L41"},"def":{"name":"create_folder","return_type":"Folder","visibility":"Public","body":"create_folder do\nend"}},{"html_id":"snapshot(folder:Folder):Snapshot-instance-method","name":"snapshot","doc":"Returns a new `Snapshot` of all files and folders within this _folder_\n\nRaises `Error` if _folder_ is **locked**\n\nNOTE: **Does not** include `File` instances in results, because no use-case yet\n\nExample:\n```\nfolder = LuckyTemplate.create_folder do |dir|\n  dir.add_file(\".keep\")\n  dir.add_file(\"README.md\")\n  dir.add_folder(\"src\") do |src|\n    src.add_file(\"hello.cr\")\n  end\nend\nputs LuckyTemplate.snapshot(folder)\n```\n\nOutput:\n```\n{\n  \".keep\" => LuckyTemplate::FileSystem::File,\n  \"README.md\" => LuckyTemplate::FileSystem::File,\n  \"src\" => LuckyTemplate::FileSystem::Folder,\n  \"src/hello.cr\" => LuckyTemplate::FileSystem::File,\n}\n```","summary":"<p>Returns a new <code><a href=\"LuckyTemplate/Snapshot.html\">Snapshot</a></code> of all files and folders within this <em>folder</em></p>","abstract":false,"args":[{"name":"folder","external_name":"folder","restriction":"Folder"}],"args_string":"(folder : Folder) : Snapshot","args_html":"(folder : <a href=\"LuckyTemplate/Folder.html\">Folder</a>) : <a href=\"LuckyTemplate/Snapshot.html\">Snapshot</a>","location":{"filename":"src/lucky_template.cr","line_number":164,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L164"},"def":{"name":"snapshot","args":[{"name":"folder","external_name":"folder","restriction":"Folder"}],"return_type":"Snapshot","visibility":"Public","body":"if folder.locked?\n  raise(Error.new(\"Cannot get snapshot if folder is locked\"))\nend\nSnapshot.new.tap do |_snapshot|\n  snapshot_folder(Path.new, folder, _snapshot)\nend\n"}},{"html_id":"validate!(location:Path,folder:Folder):Bool-instance-method","name":"validate!","doc":"Returns `true` if the _folder_ is **valid** at the given _location_\n\n**valid** - Files and folders exist within the given _location_\n\nRaises `::File::NotFoundError` if either a `File` or `Folder` does not exist\n\nExample:\n```\nbegin\n  templates_folder = LuckyTemplate.create_folder\n  LuckyTemplate.validate!(Path[\"./templates\"], templates_folder) # => true\nrescue err : ::File::NotFoundError\n  puts err.message\nend\n```","summary":"<p>Returns <code>true</code> if the <em>folder</em> is <strong>valid</strong> at the given <em>location</em></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Path"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"args_string":"(location : Path, folder : Folder) : Bool","args_html":"(location : Path, folder : <a href=\"LuckyTemplate/Folder.html\">Folder</a>) : Bool","location":{"filename":"src/lucky_template.cr","line_number":109,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L109"},"def":{"name":"validate!","args":[{"name":"location","external_name":"location","restriction":"Path"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"return_type":"Bool","visibility":"Public","body":"(snapshot(folder)).each do |filepath, type|\n  path = location / filepath\n  case type\n  in .file?\n    ::File.size(path)\n  in .folder?\n    Dir.open(path) do\n    end\n  end\nend\ntrue\n"}},{"html_id":"validate?(location:Path,folder:Folder):Bool-instance-method","name":"validate?","doc":"Returns a `Bool` if the _folder_ is **valid** at the given _location_\n\n**valid** - Files and folders exist within the given _location_\n\nExample:\n```\ntemplates_folder = LuckyTemplate.create_folder\nLuckyTemplate.validate!(Path[\"./templates\"], templates_folder) # => true\n```","summary":"<p>Returns a <code>Bool</code> if the <em>folder</em> is <strong>valid</strong> at the given <em>location</em></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Path"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"args_string":"(location : Path, folder : Folder) : Bool","args_html":"(location : Path, folder : <a href=\"LuckyTemplate/Folder.html\">Folder</a>) : Bool","location":{"filename":"src/lucky_template.cr","line_number":131,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L131"},"def":{"name":"validate?","args":[{"name":"location","external_name":"location","restriction":"Path"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"return_type":"Bool","visibility":"Public","body":"begin\n  validate!(location, folder)\nrescue\n  false\nend"}},{"html_id":"write!(location:Path,folder:Folder):Nil-instance-method","name":"write!","doc":"Writes the folder to disk at the given _location_\n\nRaises `Error` if _folder_ is locked\n\nExample:\n```\ntemplates_folder = LuckyTemplate.create_folder\nLuckyTemplate.write!(Path[\"./templates\"], templates_folder)\n```","summary":"<p>Writes the folder to disk at the given <em>location</em></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Path"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"args_string":"(location : Path, folder : Folder) : Nil","args_html":"(location : Path, folder : <a href=\"LuckyTemplate/Folder.html\">Folder</a>) : Nil","location":{"filename":"src/lucky_template.cr","line_number":54,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L54"},"def":{"name":"write!","args":[{"name":"location","external_name":"location","restriction":"Path"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"return_type":"Nil","visibility":"Public","body":"Dir.mkdir_p(location)\nif folder.locked?\n  raise(Error.new(\"Cannot write to disk if folder is locked\"))\nend\nwrite_folder!(location, folder)\n"}},{"html_id":"write!(location:Path,&:Folder->):Folder-instance-method","name":"write!","doc":"Shorthand for `.create_folder` and `.write!`\n\nExample:\n```\nfolder = LuckyTemplate.write!(Path[\"./templates\"]) do |templates_folder|\n  templates_folder.add_file(\".keep\")\nend\n```","summary":"<p>Shorthand for <code><a href=\"LuckyTemplate.html#create_folder%28%26%3AFolder-%3E%29%3AFolder-instance-method\">.create_folder</a></code> and <code><a href=\"LuckyTemplate.html#write%21%28location%3APath%2Cfolder%3AFolder%29%3ANil-instance-method\">.write!</a></code></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Path"}],"args_string":"(location : Path, & : Folder -> ) : Folder","args_html":"(location : Path, & : <a href=\"LuckyTemplate/Folder.html\">Folder</a> -> ) : <a href=\"LuckyTemplate/Folder.html\">Folder</a>","location":{"filename":"src/lucky_template.cr","line_number":86,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L86"},"def":{"name":"write!","args":[{"name":"location","external_name":"location","restriction":"Path"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Folder ->)"},"return_type":"Folder","visibility":"Public","body":"create_folder do |folder|\n  yield folder\nend.tap do |folder|\n  write!(location, folder)\nend"}}],"types":[{"html_id":"lucky_template/LuckyTemplate/Error","path":"LuckyTemplate/Error.html","kind":"class","full_name":"LuckyTemplate::Error","name":"Error","abstract":false,"superclass":{"html_id":"lucky_template/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"lucky_template/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"lucky_template/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky_template/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky_template/error.cr","line_number":3,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/error.cr#L3"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"},"doc":"A generic error class used within `LuckyTemplate`.","summary":"<p>A generic error class used within <code><a href=\"../LuckyTemplate.html\">LuckyTemplate</a></code>.</p>"},{"html_id":"lucky_template/LuckyTemplate/File","path":"LuckyTemplate/File.html","kind":"class","full_name":"LuckyTemplate::File","name":"File","abstract":false,"superclass":{"html_id":"lucky_template/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky_template/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky_template/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky_template/file.cr","line_number":14,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file.cr#L14"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"},"doc":"A `File` represents the contents of a file.","summary":"<p>A <code><a href=\"../LuckyTemplate/File.html\">File</a></code> represents the contents of a file.</p>","instance_methods":[{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends file contents to `IO`","summary":"<p>Appends file contents to <code>IO</code></p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/lucky_template/file.cr","line_number":19,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file.cr#L19"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"case file = @file\nin Fileable\n  file.to_file(io)\nin FileProc\n  file.call(io)\nin String, Nil\n  file.to_s(io)\nend"}}]},{"html_id":"lucky_template/LuckyTemplate/Fileable","path":"LuckyTemplate/Fileable.html","kind":"module","full_name":"LuckyTemplate::Fileable","name":"Fileable","abstract":false,"locations":[{"filename":"src/lucky_template/file.cr","line_number":3,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file.cr#L3"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"},"doc":"An interface for `File`.","summary":"<p>An interface for <code><a href=\"../LuckyTemplate/File.html\">File</a></code>.</p>","instance_methods":[{"html_id":"to_file(io:IO):Nil-instance-method","name":"to_file","doc":"Appends contents to `IO` for `File`","summary":"<p>Appends contents to <code>IO</code> for <code><a href=\"../LuckyTemplate/File.html\">File</a></code></p>","abstract":true,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/lucky_template/file.cr","line_number":5,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file.cr#L5"},"def":{"name":"to_file","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":""}}]},{"html_id":"lucky_template/LuckyTemplate/FileProc","path":"LuckyTemplate/FileProc.html","kind":"alias","full_name":"LuckyTemplate::FileProc","name":"FileProc","abstract":false,"locations":[{"filename":"src/lucky_template/file.cr","line_number":8,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file.cr#L8"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":true,"aliased":"Proc(IO, Nil)","aliased_html":"IO -> Nil","const":false,"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"}},{"html_id":"lucky_template/LuckyTemplate/FileSystem","path":"LuckyTemplate/FileSystem.html","kind":"enum","full_name":"LuckyTemplate::FileSystem","name":"FileSystem","abstract":false,"ancestors":[{"html_id":"lucky_template/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"lucky_template/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"lucky_template/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"lucky_template/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky_template/file_system.cr","line_number":3,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file_system.cr#L3"}],"repository_name":"lucky_template","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"File","name":"File","value":"0"},{"id":"Folder","name":"Folder","value":"1"}],"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"},"doc":"A `FileSystem` represents the files in the filesystem.","summary":"<p>A <code><a href=\"../LuckyTemplate/FileSystem.html\">FileSystem</a></code> represents the files in the filesystem.</p>","instance_methods":[{"html_id":"file?-instance-method","name":"file?","abstract":false,"location":{"filename":"src/lucky_template/file_system.cr","line_number":4,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file_system.cr#L4"},"def":{"name":"file?","visibility":"Public","body":"self == File"}},{"html_id":"folder?-instance-method","name":"folder?","abstract":false,"location":{"filename":"src/lucky_template/file_system.cr","line_number":5,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/file_system.cr#L5"},"def":{"name":"folder?","visibility":"Public","body":"self == Folder"}}]},{"html_id":"lucky_template/LuckyTemplate/Folder","path":"LuckyTemplate/Folder.html","kind":"class","full_name":"LuckyTemplate::Folder","name":"Folder","abstract":false,"superclass":{"html_id":"lucky_template/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"lucky_template/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"lucky_template/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/lucky_template/folder.cr","line_number":3,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L3"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"},"doc":"A `Folder` represents a filesystem directory, but in a virtual form.","summary":"<p>A <code><a href=\"../LuckyTemplate/Folder.html\">Folder</a></code> represents a filesystem directory, but in a virtual form.</p>","instance_methods":[{"html_id":"add_file(name:String,content:String):self-instance-method","name":"add_file","doc":"Adds a new `File` to the folder with _content_\n\nRaises `Error` if _name_ contains invalid path(s)\n\nExamples(s):\n```\nadd_file(\"hello.txt\", \"hello world\")\n\nadd_file(\"hello.txt\", <<-TEXT)\nhello world\nTEXT\n```","summary":"<p>Adds a new <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder with <em>content</em></p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"content","external_name":"content","restriction":"String"}],"args_string":"(name : String, content : String) : self","args_html":"(name : String, content : String) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":27,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L27"},"def":{"name":"add_file","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"content","external_name":"content","restriction":"String"}],"return_type":"self","visibility":"Public","body":"add_file(Path[name], content)"}},{"html_id":"add_file(path:Path,content:String):self-instance-method","name":"add_file","doc":"Adds a new `File` to the folder with _content_\n\nRaises `Error` if _path_ contains invalid path(s)\n\nExamples(s):\n```\nadd_file(Path[\"./hello.txt\"], \"hello world\")\n\nadd_file(Path[\"./hello.txt\"], <<-TEXT)\nhello world\nTEXT\n```","summary":"<p>Adds a new <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder with <em>content</em></p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"},{"name":"content","external_name":"content","restriction":"String"}],"args_string":"(path : Path, content : String) : self","args_html":"(path : Path, content : String) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":43,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L43"},"def":{"name":"add_file","args":[{"name":"path","external_name":"path","restriction":"Path"},{"name":"content","external_name":"content","restriction":"String"}],"return_type":"self","visibility":"Public","body":"add_file(path, File.new(content))"}},{"html_id":"add_file(name:String,klass:Fileable):self-instance-method","name":"add_file","doc":"Adds a new `File` to the folder with _klass_ implementing `Fileable` interface\n\nRaises `Error` if _name_ contains invalid path(s)\n\nExample(s):\n```\nclass Hello\n  include LuckyTemplate::Fileable\n  def to_file(io : IO) : Nil\n    io << \"hello\"\n  end\nend\n\nadd_file(\"hello.txt\", Hello.new)\n```","summary":"<p>Adds a new <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder with <em>klass</em> implementing <code><a href=\"../LuckyTemplate/Fileable.html\">Fileable</a></code> interface</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Fileable"}],"args_string":"(name : String, klass : Fileable) : self","args_html":"(name : String, klass : <a href=\"../LuckyTemplate/Fileable.html\">Fileable</a>) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":62,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L62"},"def":{"name":"add_file","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Fileable"}],"return_type":"self","visibility":"Public","body":"add_file(Path[name], klass)"}},{"html_id":"add_file(path:Path,klass:Fileable):self-instance-method","name":"add_file","doc":"Adds a new `File` to the folder with _klass_ implementing `Fileable` interface\n\nRaises `Error` if _path_ contains invalid path(s)\n\nExample(s):\n```\nclass Hello\n  include LuckyTemplate::Fileable\n  def to_file(io : IO) : Nil\n    io << \"hello\"\n  end\nend\n\nadd_file(Path[\"./hello.txt\"], Hello.new)\n```","summary":"<p>Adds a new <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder with <em>klass</em> implementing <code><a href=\"../LuckyTemplate/Fileable.html\">Fileable</a></code> interface</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"},{"name":"klass","external_name":"klass","restriction":"Fileable"}],"args_string":"(path : Path, klass : Fileable) : self","args_html":"(path : Path, klass : <a href=\"../LuckyTemplate/Fileable.html\">Fileable</a>) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":81,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L81"},"def":{"name":"add_file","args":[{"name":"path","external_name":"path","restriction":"Path"},{"name":"klass","external_name":"klass","restriction":"Fileable"}],"return_type":"self","visibility":"Public","body":"add_file(path, File.new(klass))"}},{"html_id":"add_file(name:String,&block:FileProc):self-instance-method","name":"add_file","doc":"Adds a new `File` to the folder yielding an `IO`\n\nRaises `Error` if _name_ contains invalid path(s)\n\nExample(s):\n```\nadd_file(\"hello.txt\") do |io|\n  ECR.embed(\"hello.ecr\", io)\nend\n\nproc = LuckyTemplate::FileProc.new { |io| ECR.embed(\"hello.ecr\", io) }\nadd_file(\"hello.txt\", &proc)\n```","summary":"<p>Adds a new <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder yielding an <code>IO</code></p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String, &block : FileProc) : self","args_html":"(name : String, &block : <a href=\"../LuckyTemplate/FileProc.html\">FileProc</a>) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":98,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L98"},"def":{"name":"add_file","args":[{"name":"name","external_name":"name","restriction":"String"}],"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":"FileProc"},"return_type":"self","visibility":"Public","body":"add_file(Path[name], &block)"}},{"html_id":"add_file(path:Path,&block:FileProc):self-instance-method","name":"add_file","doc":"Adds a new `File` to the folder yielding an `IO`\n\nRaises `Error` if _path_ contains invalid path(s)\n\nExample(s):\n```\nadd_file(Path[\"./hello.txt\"]) do |io|\n  ECR.embed(\"hello.ecr\", io)\nend\n\nproc = LuckyTemplate::FileProc.new { |io| ECR.embed(\"hello.ecr\", io) }\nadd_file(Path[\"./hello.txt\"], &proc)\n```","summary":"<p>Adds a new <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder yielding an <code>IO</code></p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"}],"args_string":"(path : Path, &block : FileProc) : self","args_html":"(path : Path, &block : <a href=\"../LuckyTemplate/FileProc.html\">FileProc</a>) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":115,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L115"},"def":{"name":"add_file","args":[{"name":"path","external_name":"path","restriction":"Path"}],"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":"FileProc"},"return_type":"self","visibility":"Public","body":"add_file(path, File.new(block))"}},{"html_id":"add_file(name:String):self-instance-method","name":"add_file","doc":"Adds a new empty `File` to the folder\n\nRaises `Error` if _name_ contains invalid path(s)\n\nExample(s):\n```\nadd_file(\"hello.txt\")\n```","summary":"<p>Adds a new empty <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : self","args_html":"(name : String) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":127,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L127"},"def":{"name":"add_file","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"self","visibility":"Public","body":"add_file(Path[name])"}},{"html_id":"add_file(path:Path):self-instance-method","name":"add_file","doc":"Adds a new empty `File` to the folder\n\nRaises `Error` if _path_ contains invalid path(s)\n\nExample:\n```\nadd_file(Path[\"./hello.txt\"])\n```","summary":"<p>Adds a new empty <code><a href=\"../LuckyTemplate/File.html\">File</a></code> to the folder</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"}],"args_string":"(path : Path) : self","args_html":"(path : Path) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":139,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L139"},"def":{"name":"add_file","args":[{"name":"path","external_name":"path","restriction":"Path"}],"return_type":"self","visibility":"Public","body":"add_file(path, File.new(nil))"}},{"html_id":"add_folder(names:Enumerable(String),&:Folder->):self-instance-method","name":"add_folder","doc":"Adds nested folders, yielding the last one\n\nRaises `Error` if _names_ contains invalid folder names\n\nExample:\n```\nadd_folder([\"a\", \"b\", \"c\"]) do |c|\n  c.add_file(\"hello.txt\")\nend\n```\n\nProduces these folder paths:\n```text\na\na/b\na/b/c\na/b/c/hello.txt\n```","summary":"<p>Adds nested folders, yielding the last one</p>","abstract":false,"args":[{"name":"names","external_name":"names","restriction":"Enumerable(String)"}],"args_string":"(names : Enumerable(String), & : Folder -> ) : self","args_html":"(names : Enumerable(String), & : <a href=\"../LuckyTemplate/Folder.html\">Folder</a> -> ) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":185,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L185"},"def":{"name":"add_folder","args":[{"name":"names","external_name":"names","restriction":"Enumerable(String)"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Folder ->)"},"return_type":"self","visibility":"Public","body":"begin\n  names = (normalize_path(Path[names])).parts\nrescue Error\n  raise(Error.new(\"Cannot add Folders with invalid folder names\"))\nend\nprev : Folder | ::Nil = nil\nnames.each_with_index do |name, index|\n  current_folder = Folder.new\n  if index == (names.size - 1)\n    current_folder.lock do\n      yield current_folder\n    end\n  end\n  if prev_folder = prev\n    prev_folder.insert_folder(name, current_folder)\n  else\n    insert_folder(name, current_folder)\n  end\n  prev = current_folder\nend\nself\n"}},{"html_id":"add_folder(path:Path,&:Folder->):self-instance-method","name":"add_folder","doc":"Adds nested folders, yielding the last one\n\nRaises `Error` if _path_ contains invalid folder names\n\nExample:\n```\nadd_folder(Path[\"a/b/c\"]) do |c|\n  c.add_file(\"hello.txt\")\nend\n```\n\nProduces these folder paths:\n```text\na\na/b\na/b/c\na/b/c/hello.txt\n```","summary":"<p>Adds nested folders, yielding the last one</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"}],"args_string":"(path : Path, & : Folder -> ) : self","args_html":"(path : Path, & : <a href=\"../LuckyTemplate/Folder.html\">Folder</a> -> ) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":228,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L228"},"def":{"name":"add_folder","args":[{"name":"path","external_name":"path","restriction":"Path"}],"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Folder ->)"},"return_type":"self","visibility":"Public","body":"add_folder(path.parts) do |folder|\n  yield folder\nend"}},{"html_id":"add_folder(*names:String,&:Folder->):self-instance-method","name":"add_folder","doc":"Adds nested folders, yielding the last one\n\nRaises `Error` if _names_ contains invalid folder names\n\nExample:\n```\nadd_folder(\"a\", \"b\", \"c\") do |c|\n  c.add_file(\"hello.txt\")\nend\n```\n\nProduces these folder paths:\n```text\na\na/b\na/b/c\na/b/c/hello.txt\n```","summary":"<p>Adds nested folders, yielding the last one</p>","abstract":false,"args":[{"name":"names","external_name":"names","restriction":"String"}],"args_string":"(*names : String, & : Folder -> ) : self","args_html":"(*names : String, & : <a href=\"../LuckyTemplate/Folder.html\">Folder</a> -> ) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":252,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L252"},"def":{"name":"add_folder","args":[{"name":"names","external_name":"names","restriction":"String"}],"splat_index":0,"yields":1,"block_arity":1,"block_arg":{"name":"","external_name":"","restriction":"(Folder ->)"},"return_type":"self","visibility":"Public","body":"add_folder(names) do |folder|\n  yield folder\nend"}},{"html_id":"add_folder(names:Enumerable(String)):self-instance-method","name":"add_folder","doc":"Adds nested empty folders\n\nRaises `Error` if _names_ contains invalid folder names\n\nExample:\n```\nadd_folder([\"a\", \"b\", \"c\", \"d\"])\n```\n\nProduces these folder paths:\n```text\na\na/b\na/b/c\na/b/c/d\n```","summary":"<p>Adds nested empty folders</p>","abstract":false,"args":[{"name":"names","external_name":"names","restriction":"Enumerable(String)"}],"args_string":"(names : Enumerable(String)) : self","args_html":"(names : Enumerable(String)) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":274,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L274"},"def":{"name":"add_folder","args":[{"name":"names","external_name":"names","restriction":"Enumerable(String)"}],"return_type":"self","visibility":"Public","body":"add_folder(names) do\nend"}},{"html_id":"add_folder(path:Path):self-instance-method","name":"add_folder","doc":"Adds nested empty folders\n\nRaises `Error` if _path_ contains invalid folder names\n\nExample:\n```\nadd_folder(Path[\"a/b/c/d\"])\n```\n\nProduces these folder paths:\n```text\na\na/b\na/b/c\na/b/c/d\n```","summary":"<p>Adds nested empty folders</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"}],"args_string":"(path : Path) : self","args_html":"(path : Path) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":294,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L294"},"def":{"name":"add_folder","args":[{"name":"path","external_name":"path","restriction":"Path"}],"return_type":"self","visibility":"Public","body":"add_folder(path.parts) do\nend"}},{"html_id":"add_folder(*names:String):self-instance-method","name":"add_folder","doc":"Adds nested empty folders\n\nRaises `Error` if _names_ contains invalid folder names\n\nExample:\n```\nadd_folder(\"a\", \"b\", \"c\", \"d\")\n```\n\nProduces these folder paths:\n```text\na\na/b\na/b/c\na/b/c/d\n```","summary":"<p>Adds nested empty folders</p>","abstract":false,"args":[{"name":"names","external_name":"names","restriction":"String"}],"args_string":"(*names : String) : self","args_html":"(*names : String) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":314,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L314"},"def":{"name":"add_folder","args":[{"name":"names","external_name":"names","restriction":"String"}],"splat_index":0,"return_type":"self","visibility":"Public","body":"add_folder(names)"}},{"html_id":"empty?(*args,**options)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky_template/folder.cr","line_number":348,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L348"},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@files.empty?(*args, **options)"}},{"html_id":"empty?(*args,**options,&)-instance-method","name":"empty?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky_template/folder.cr","line_number":348,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L348"},"def":{"name":"empty?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@files.empty?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"insert_folder(name:String,folder:Folder):self-instance-method","name":"insert_folder","doc":"Insert an existing folder\n\nRaises `Error` if one of the following are true:\n  - existing folder is equal to itself\n  - existing folder is locked\n\nExample:\n```\nanother_folder = LuckyTemplate::Folder.new\nLuckyTemplate.create_folder do |folder|\n  folder.insert_folder(another_folder)\nend\n```","summary":"<p>Insert an existing folder</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"args_string":"(name : String, folder : Folder) : self","args_html":"(name : String, folder : <a href=\"../LuckyTemplate/Folder.html\">Folder</a>) : <span class=\"k\">self</span>","location":{"filename":"src/lucky_template/folder.cr","line_number":331,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L331"},"def":{"name":"insert_folder","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"folder","external_name":"folder","restriction":"Folder"}],"return_type":"self","visibility":"Public","body":"if folder == self\n  raise(Error.new(\"Cannot add Folder equal to itself\"))\nelse\n  if folder.locked?\n    raise(Error.new(\"Cannot add Folder that is locked\"))\n  end\nend\n@files[name] = folder\nself\n"}},{"html_id":"locked?:Bool-instance-method","name":"locked?","doc":"Checks if folder is _locked_\n\nUsually means it's being yielded already.","summary":"<p>Checks if folder is <em>locked</em></p>","abstract":false,"location":{"filename":"src/lucky_template/folder.cr","line_number":344,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L344"},"def":{"name":"locked?","return_type":"Bool","visibility":"Public","body":"@locked"}},{"html_id":"size(*args,**options)-instance-method","name":"size","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/lucky_template/folder.cr","line_number":348,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L348"},"def":{"name":"size","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@files.size(*args, **options)"}},{"html_id":"size(*args,**options,&)-instance-method","name":"size","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/lucky_template/folder.cr","line_number":348,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L348"},"def":{"name":"size","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@files.size(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}],"types":[{"html_id":"lucky_template/LuckyTemplate/Folder/Files","path":"LuckyTemplate/Folder/Files.html","kind":"alias","full_name":"LuckyTemplate::Folder::Files","name":"Files","abstract":false,"locations":[{"filename":"src/lucky_template/folder.cr","line_number":4,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template/folder.cr#L4"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":true,"aliased":"(LuckyTemplate::File | LuckyTemplate::Folder)","aliased_html":"<a href=\"../../LuckyTemplate/File.html\">LuckyTemplate::File</a> | <a href=\"../../LuckyTemplate/Folder.html\">LuckyTemplate::Folder</a>","const":false,"namespace":{"html_id":"lucky_template/LuckyTemplate/Folder","kind":"class","full_name":"LuckyTemplate::Folder","name":"Folder"}}]},{"html_id":"lucky_template/LuckyTemplate/Snapshot","path":"LuckyTemplate/Snapshot.html","kind":"alias","full_name":"LuckyTemplate::Snapshot","name":"Snapshot","abstract":false,"locations":[{"filename":"src/lucky_template.cr","line_number":12,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/lucky_template.cr#L12"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":true,"aliased":"Hash(String, LuckyTemplate::FileSystem)","aliased_html":"Hash(String, <a href=\"../LuckyTemplate/FileSystem.html\">LuckyTemplate::FileSystem</a>)","const":false,"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"},"doc":"A `LuckyTemplate::Snapshot` represents files and folders included within a `LuckyTemplate::Folder` at a moment in time\n\n**Key:** String path in **POSIX** form\n\n**Value:** Type of `LuckyTemplate::FileSystem`","summary":"<p>A <code><a href=\"../LuckyTemplate/Snapshot.html\">LuckyTemplate::Snapshot</a></code> represents files and folders included within a <code><a href=\"../LuckyTemplate/Folder.html\">LuckyTemplate::Folder</a></code> at a moment in time</p>"},{"html_id":"lucky_template/LuckyTemplate/Spec","path":"LuckyTemplate/Spec.html","kind":"module","full_name":"LuckyTemplate::Spec","name":"Spec","abstract":false,"locations":[{"filename":"src/spec.cr","line_number":2,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/spec.cr#L2"}],"repository_name":"lucky_template","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"lucky_template/LuckyTemplate/Spec","kind":"module","full_name":"LuckyTemplate::Spec","name":"Spec"}],"namespace":{"html_id":"lucky_template/LuckyTemplate","kind":"module","full_name":"LuckyTemplate","name":"LuckyTemplate"},"instance_methods":[{"html_id":"be_valid_at(location:Path)-instance-method","name":"be_valid_at","doc":"Validates all files and folders exist within the given _location_","summary":"<p>Validates all files and folders exist within the given <em>location</em></p>","abstract":false,"args":[{"name":"location","external_name":"location","restriction":"Path"}],"args_string":"(location : Path)","args_html":"(location : Path)","location":{"filename":"src/spec.cr","line_number":6,"url":"https://github.com/mdwagner/lucky_template/blob/b9c0cf01446f420865c20cf42ac4ad257ab98403/src/spec.cr#L6"},"def":{"name":"be_valid_at","args":[{"name":"location","external_name":"location","restriction":"Path"}],"visibility":"Public","body":"BeValidAtExpectation.new(location)"}}]}]}]}}